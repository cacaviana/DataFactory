{
	"name": "MigrationDelta",
	"properties": {
		"activities": [
			{
				"name": "LookupNewWaterMarkActivity",
				"description": "Busca informacoes da tabela Watermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "Select \nMAX(LastModifytime) as \nNewWatermarkvalue from \ndata_source_table",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "data_source_tableDataSet",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "LookupOldWaterMarkActivity",
				"description": "Pega os dados da tabela WatermarkDataset",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "WatermarkDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "IncrementalCopyActivity",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupNewWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from data_source_table where \nLastModifytime > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' \nand LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "data_source_tableDataSet",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Json1",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "StoredProcedureWriteWatermarkActivity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IncrementalCopyActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@activity('LookupOldWaterMarkActivity').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SqlServerMV39Tables",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Lab Migration incremental"
		},
		"annotations": [],
		"lastPublishTime": "2021-05-25T15:54:33Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}